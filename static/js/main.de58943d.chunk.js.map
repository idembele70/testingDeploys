{"version":3,"sources":["components/Navbar/styles.js","components/Navbar/Navbar.jsx","components/SearchBars/styles.js","components/SearchBars/SearchBar.js","components/SearchBars/SearchBars.jsx","components/MainContent/PokemonCard/styles.js","components/MainContent/PokemonCard/PokemonCard.jsx","components/MainContent/styles.js","components/MainContent/PokemonSkeleton/styles.js","components/MainContent/PokemonSkeleton/PokemonSkeleton.jsx","components/MainContent/MainContent.jsx","App.jsx","index.jsx"],"names":["makeStyles","title","fontFamily","fontStyle","letterSpacing","textAlign","borderRadius","fontWeight","color","boxShadow","pokedex","maxWidth","width","height","lineHeight","liked","Navbar","classes","useStyles","Box","display","mx","mt","justifyContent","Button","variant","className","root","margin","form","border","padding","fontSize","searchByName","searchByNumber","searchByType","withStyles","theme","input","position","backgroundColor","palette","common","white","transition","transitions","create","join","borderColor","InputBase","SearchBars","Grid","container","spacing","item","SearchBar","placeholder","alignItems","image","objectFit","CardContent","marginLeft","pokemonNumber","pokemonName","type","overflow","pokemonTypeOne","likeContainer","right","bottom","PokemonCard","id","name","firstType","secondType","COLORTYPE","normal","electric","grass","poison","bug","ghost","fire","water","ground","rock","ice","fighting","steel","psychic","flying","dragon","firstTypeColor","toLowerCase","secondTypeColor","Card","CardMedia","component","onError","e","target","onerror","src","Typography","style","toUpperCase","pokemonTypeTwo","CardActions","IconButton","FormControlLabel","likeBtn","control","Checkbox","icon","ThumbUpOutlined","checkedIcon","ThumbUp","defaultProps","skeletonImg","skeletonContent","skeletonTitle","skeletonType","skeletonLike","PokemonSkeleton","Skeleton","xs","MainContent","useTheme","isSmallDisplay","useMediaQuery","breakpoints","down","useState","displayPokemons","setDisplayPokemons","skeletonLength","pokemonsDB","setPokemonsDB","handleFetch","length","loadMoreLength","data","filter","dt","idx","map","img","Math","random","max","useEffect","fetch","then","res","json","a","console","log","pageStart","hasMore","loadMore","loader","Array","from","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uMAEeA,cAAW,CACxBC,MAAO,CACLC,WAAY,SACZC,UAAW,SACXC,cAAe,UACfC,UAAW,SACXC,aAAc,OACdC,WAAY,OACZC,MAAO,UACPC,UAAW,yCAEbC,QAAS,CACPC,SAAU,IACVC,MAAO,MACPC,OAAQ,GACRC,WAAY,QAEdC,MAAO,CACLJ,SAAU,IACVC,MAAO,MACPC,OAAQ,GACRC,WAAY,U,OCEDE,MArBf,WACE,IAAMC,EAAUC,IAChB,OACE,eAACC,EAAA,EAAD,CACEC,QAAQ,OACRR,MAAM,OACND,SAAU,IACVU,GAAG,OACHC,GAAI,EACJC,eAAe,gBANjB,UAQE,cAACC,EAAA,EAAD,CAAQC,QAAQ,OAAOC,UAAS,UAAKT,EAAQhB,MAAb,YAAsBgB,EAAQP,SAA9D,qBAGA,cAACc,EAAA,EAAD,CAAQC,QAAQ,OAAOC,UAAS,UAAKT,EAAQhB,MAAb,YAAsBgB,EAAQF,OAA9D,uB,QChBSf,cAAW,CACxB2B,KAAM,CACJf,MAAO,OACPD,SAAU,IACViB,OAAQ,kBAEVC,KAAM,CACJjB,MAAO,OACP,QAAS,CACPC,OAAQ,OACRJ,UAAW,wCACXH,aAAc,GACdwB,OAAQ,OACRC,QAAS,aAETC,SAAU,GACVlB,WAAY,GACZV,cAAe,SACfI,MAAO,YAGXyB,aAAc,CACZrB,MAAO,OACPD,SAAU,SAEZuB,eAAgB,CACdtB,MAAO,IACPgB,OAAQ,cAEVO,aAAc,CACZvB,MAAO,O,eC9BIwB,eAAW,SAACC,GAAD,MAAY,CACpCC,MAAO,CACLhC,aAAc,GACdiC,SAAU,WACVC,gBAAiBH,EAAMI,QAAQC,OAAOC,MACtCb,OAAQ,oBACRE,SAAU,GACVD,QAAS,WACTtB,UAAW,wCACXmC,WAAYP,EAAMQ,YAAYC,OAAO,CAAC,eAAgB,eACtD1C,cAAe,SACfI,MAAO,UACPL,UAAW,SACXI,WAAY,SACZL,WAAY,CACV,SACA,gBACA,qBACA,aACA,mBACA,QACA,aACA,sBACA,mBACA,qBACA6C,KAAK,KACP,UAAW,CACTtC,UAAU,+BACVuC,YAAa,eA5BJZ,CA+BXa,KCRWC,MApBf,WACE,IAAMjC,EAAUC,IAChB,OACE,eAACiC,EAAA,EAAD,CACEC,WAAS,EACT1B,UAAWT,EAAQU,KACnB0B,QAAS,EACT9B,eAAe,SAJjB,UAME,cAAC4B,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,cAACC,EAAD,CAAWC,YAAY,YAAY9B,UAAWT,EAAQgB,iBAExD,eAACkB,EAAA,EAAD,CAAMG,MAAI,EAAV,UACE,cAACC,EAAD,CAAWC,YAAY,SAAS9B,UAAWT,EAAQiB,iBACnD,cAACqB,EAAD,CAAWC,YAAY,OAAO9B,UAAWT,EAAQkB,sB,iICjB1CnC,cAAW,CACxB2B,KAAM,CACJP,QAAS,OACTR,MAAO,IACPC,OAAQ,IACRkB,QAAS,sBACTH,OAAQ,OACR6B,WAAY,SACZlB,SAAU,WACVjC,aAAc,IAEhBoD,MAAO,CACL7C,OAAQ,IACRD,MAAO,IACP+C,UAAW,WAEbC,YAAa,CACXC,WAAY,GACZ9B,QAAS,GAEX9B,MAAO,CACL,QAAS,CACPC,WAAY,SACZC,UAAW,SACXI,WAAY,IACZyB,SAAU,GACV5B,cAAe,WAGnB0D,cAAe,CACbtD,MAAO,UACPoB,OAAQ,gBAEVmC,YAAa,CACXvD,MAAO,WAETwD,KAAM,CACJ,QAAS,CACPC,SAAU,SACVrD,MAAO,GACPV,WAAY,SACZC,UAAW,SACXI,WAAY,IACZyB,SAAU,EACV5B,cAAe,SACfI,MAAO,QACPH,UAAW,SACXmC,gBAAiB,MACjBlC,aAAc,GACdwB,OAAQ,QAGZoC,eAAgB,CACdtC,OAAQ,eAEVuC,cAAe,CACb5B,SAAU,WACV6B,MAAO,OACPC,OAAQ,OACRvC,OAAQ,qBACRxB,aAAc,GACdyB,QAAS,EACTnB,MAAO,GACPC,OAAQ,GACR,QAAS,CACPkB,QAAS,EACTnB,MAAO,OACPC,OAAQ,QAEV,8BAA+B,CAC7Be,OAAQ,MCxDd,SAAS0C,EAAT,GAAkE,IAA3CC,EAA0C,EAA1CA,GAAIC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,UAAWC,EAAqB,EAArBA,WAAYhB,EAAS,EAATA,MAChDiB,EAAY,CAChBC,OAAQ,UACRC,SAAU,UACVC,MAAO,UACPC,OAAQ,UACRC,IAAK,UACLC,MAAO,UACPC,KAAM,UACNC,MAAO,UACPC,OAAQ,UACRC,KAAM,UACNC,IAAK,UACLC,SAAU,UACVC,MAAO,UACPC,QAAS,UACTC,OAAQ,UACRC,OAAQ,WAEJ1E,EAAUC,IACV0E,EAAiBnB,EACnBE,EAAUF,EAAUoB,eACpBlB,EAAUC,OACRkB,EAAkBpB,EACpBC,EAAUD,EAAWmB,eACrBlB,EAAUC,OAKd,OACE,eAACmB,EAAA,EAAD,CAAMtE,QAAQ,WAAWC,UAAWT,EAAQU,KAA5C,UACE,cAACqE,EAAA,EAAD,CACEtE,UAAWT,EAAQyC,MACnBA,MAAOA,EACPzD,MAAM,UACNgG,UAAU,MACVC,QAXU,SAACC,GACfA,EAAEC,OAAOC,QAAU,KACnBF,EAAEC,OAAOE,IAAM,8BAWb,eAAC1C,EAAA,EAAD,CAAalC,UAAWT,EAAQ2C,YAAhC,UACE,eAACzC,EAAA,EAAD,CAAKC,QAAQ,OAAOM,UAAWT,EAAQhB,MAAvC,UACE,cAACsG,EAAA,EAAD,CAAY9E,QAAQ,QAAQC,UAAWT,EAAQ6C,cAA/C,SACGS,IAEH,cAACgC,EAAA,EAAD,CAAY9E,QAAQ,QAAQC,UAAWT,EAAQ8C,YAA/C,SACGS,OAGL,eAACrD,EAAA,EAAD,CAAKO,UAAWT,EAAQ+C,KAAxB,UACE,cAAC7C,EAAA,EAAD,CACEqF,MAAO,CAAEhE,gBAAiBoD,GAC1BlE,UAAWT,EAAQiD,eAFrB,SAIGO,GAAaA,EAAUgC,gBAE1B,cAACtF,EAAA,EAAD,CACEO,UAAWT,EAAQyF,eACnBF,MAAO,CAAEhE,gBAAiBsD,GAF5B,SAIGpB,GAAcA,EAAW+B,sBAKhC,cAACE,EAAA,EAAD,CAAajF,UAAWT,EAAQkD,cAAhC,SACE,cAACyC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEnF,UAAWT,EAAQ6F,QACnBC,QACE,cAACC,EAAA,EAAD,CACExG,MAAM,UACNyG,KAAM,cAACC,EAAA,EAAD,CAAiBlF,SAAS,UAChCmF,YAAa,cAACC,EAAA,EAAD,CAASpF,SAAS,UAC/BwC,KAAI,iBAAYD,cAiBhCD,EAAY+C,aAAe,CACzB5C,UAAW,GACXC,WAAY,IAECJ,QC5GAtE,cAAW,CACxB2B,KAAM,CACJf,MAAO,QACPD,SAAU,KACViB,OAAQ,U,QCJG5B,cAAW,CACxB2B,KAAM,CACJf,MAAO,IACPC,OAAQ,IACR0B,SAAU,WACVT,OAAQ,gCACRxB,aAAc,GACdsB,OAAQ,GAEV0F,YAAa,CACX1G,MAAO,IACPC,OAAQ,KAEV0G,gBAAiB,CACf3G,MAAO,GACPC,OAAQ,IAEV2G,cAAe,CACb5G,MAAO,OACPC,OAAQ,IAEV4G,aAAc,CACZ7G,MAAO,GACPC,OAAQ,IAEV6G,aAAc,CACZnF,SAAU,WACV6B,MAAO,OACPC,OAAQ,OACRtC,QAAS,EACTnB,MAAO,GACPC,OAAQ,MCCG8G,MA7Bf,WACE,IAAM1G,EAAUC,IAChB,OACE,eAACiC,EAAA,EAAD,CACEG,MAAI,EACJF,WAAS,EACTC,QAAS,EACTI,WAAW,SACX/B,UAAWT,EAAQU,KALrB,UAOE,cAACwB,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,cAACsE,EAAA,EAAD,CAAUnG,QAAQ,OAAOC,UAAWT,EAAQqG,gBAE9C,eAACnE,EAAA,EAAD,CAAMG,MAAI,EAACF,WAAS,EAAC1B,UAAWT,EAAQsG,gBAAxC,UACE,cAACpE,EAAA,EAAD,CAAMG,MAAI,EAACuE,GAAI,GAAf,SACE,cAACD,EAAA,EAAD,CAAUnG,QAAQ,OAAOC,UAAWT,EAAQuG,kBAE9C,cAACrE,EAAA,EAAD,CAAMG,MAAI,EAACuE,GAAI,GAAf,SACE,cAACD,EAAA,EAAD,CAAUnG,QAAQ,OAAOC,UAAWT,EAAQwG,iBAE9C,cAACtE,EAAA,EAAD,CAAMG,MAAI,EAACuE,GAAI,GAAf,SACE,cAACD,EAAA,EAAD,CAAUnG,QAAQ,OAAOC,UAAWT,EAAQwG,iBAE9C,cAACG,EAAA,EAAD,CAAUnG,QAAQ,SAASC,UAAWT,EAAQyG,sBC2EvCI,MAhGf,WACE,IAAM7G,EAAUC,IACVmB,EAAQ0F,cACRC,EAAiBC,YAAc5F,EAAM6F,YAAYC,KAAK,OAC5D,EAA8CC,mBAAS,IAAvD,mBAAOC,EAAP,KAAwBC,EAAxB,KACMC,EAAiBP,EAAiB,EAAI,EAC5C,EAAoCI,mBAAS,IAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KACA,SAASC,IACP,GAAIL,EAAgBM,OAASJ,EAAiBC,EAAWG,OAAQ,CAC/D,IAAMC,EAAiBP,EAAgBM,OAASJ,EAChDD,GAAmB,SAACO,GAAD,4BACdA,GADc,YAEd,YACEL,EAAWM,QACZ,SAACC,EAAIC,GAAL,OAAaA,GAAOH,EAAKF,QAAUK,EAAMJ,MAE3CK,KAAI,gBAAG1E,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMR,EAAb,EAAaA,KAAMkF,EAAnB,EAAmBA,IAAnB,OACJ,cAAC/F,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,cAAC,EAAD,CACEiB,GAAIA,EACJE,UAAWT,EAAOA,EAAK,GAAK,GAC5BU,WAAYV,EAAOA,EAAK,GAAK,GAC7BQ,KAAMA,EACNd,MAAOwF,KANK1E,EAAO2E,KAAKC,sBAW3B,CACL,IAAMC,EACJhB,EAAgBM,QAAUH,EAAWG,OAASN,EAAgBM,QAChEL,GAAmB,SAACO,GAAD,4BACdA,GADc,YAEdL,EACAM,QAAO,SAACC,EAAIC,GAAL,OAAaA,GAAOH,EAAKF,QAAUK,EAAMK,KAChDJ,KAAI,gBAAG1E,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMR,EAAb,EAAaA,KAAMkF,EAAnB,EAAmBA,IAAnB,OACH,cAAC/F,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,cAAC,EAAD,CACEiB,GAAIA,EACJE,UAAWT,EAAOA,EAAK,GAAK,GAC5BU,WAAYV,EAAOA,EAAK,GAAK,GAC7BQ,KAAMA,EACNd,MAAOwF,KANK1E,EAAO2E,KAAKC,mBAuBtC,OAVAE,qBAAU,WACRC,MAAM,sBAAsBC,MAAK,SAACC,GAAD,OAC/BA,EAAIC,OAAOF,MAAK,SAACX,GACfJ,GAAc,SAACkB,GAAD,4BAAWA,GAAX,YAAiBd,OAC/Be,QAAQC,IAAI,iDAAkDhB,GAC1DL,EAAWG,QAAQD,UAG3BkB,QAAQC,IAAI,wCAAyCrB,EAAWG,UAC/D,IAED,cAAC,IAAD,CACEmB,UAAW,EACXC,QAAS1B,EAAgBM,OAASH,EAAWG,OAC7CqB,SAAU,WACRJ,QAAQC,IAAI,cACZnB,KAEFuB,OACE,cAAC9G,EAAA,EAAD,CACEC,WAAS,EACTC,QAAS,EACT3B,UAAWT,EAAQU,KACnBJ,eAAe,SAJjB,SAOG2I,MAAMC,KAAK,CAAExB,OAAQ,KAAM,kBAC1B,cAACxF,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,cAAC,EAAD,KADF,iBAA0B6F,KAAKC,eAH7B,aAbV,SAuBE,cAACjG,EAAA,EAAD,CACEC,WAAS,EACTC,QAAS,EACT3B,UAAWT,EAAQU,KACnBJ,eAAe,SAJjB,SAOG8G,GAFG,gBClFG+B,MAVf,WACE,OACE,qCACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCJNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.de58943d.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/core\"\n\nexport default makeStyles({\n  title: {\n    fontFamily: \"Roboto\",\n    fontStyle: \"normal\",\n    letterSpacing: \"0.345em\",\n    textAlign: \"center\",\n    borderRadius: \"18px\",\n    fontWeight: \"bold\",\n    color: \"#000000\",\n    boxShadow: \"0px 4px 16px -3px rgba(0, 0, 0, 0.15)\"\n  },\n  pokedex: {\n    maxWidth: 211,\n    width: \"45%\",\n    height: 34,\n    lineHeight: \"34px\"\n  },\n  liked: {\n    maxWidth: 171,\n    width: \"37%\",\n    height: 34,\n    lineHeight: \"34px\"\n  }\n})\n","import { Box, Button } from \"@material-ui/core\"\nimport React from \"react\"\nimport useStyles from \"./styles\"\n\nfunction Navbar() {\n  const classes = useStyles()\n  return (\n    <Box\n      display=\"flex\"\n      width=\"90vw\"\n      maxWidth={460}\n      mx=\"auto\"\n      mt={9}\n      justifyContent=\"space-between\"\n    >\n      <Button variant=\"text\" className={`${classes.title} ${classes.pokedex}`}>\n        POKEDEX\n      </Button>\n      <Button variant=\"text\" className={`${classes.title} ${classes.liked}`}>\n        LIKED\n      </Button>\n    </Box>\n  )\n}\n\nexport default Navbar\n","import { makeStyles } from \"@material-ui/core\"\n\nexport default makeStyles({\n  root: {\n    width: \"82vw\",\n    maxWidth: 674,\n    margin: \"53px auto 54px\"\n  },\n  form: {\n    width: \"100%\",\n    \"& > *\": {\n      height: \"36px\",\n      boxShadow: \"0px 4px 16px -3px rgba(0, 0, 0, 0.07)\",\n      borderRadius: 18,\n      border: \"none\",\n      padding: \"0 0 0 22px\",\n\n      fontSize: 12,\n      lineHeight: 36,\n      letterSpacing: \"0.04em\",\n      color: \"#C4C4C4\"\n    }\n  },\n  searchByName: {\n    width: \"82vw\",\n    maxWidth: \"383px\"\n  },\n  searchByNumber: {\n    width: 102,\n    margin: \"0 18px 0 0\"\n  },\n  searchByType: {\n    width: 131\n  }\n})\n","import { withStyles, InputBase } from \"@material-ui/core\"\n\nexport default withStyles((theme) => ({\n  input: {\n    borderRadius: 18,\n    position: \"relative\",\n    backgroundColor: theme.palette.common.white,\n    border: \"1px solid #ced4da\",\n    fontSize: 12,\n    padding: \"7px 12px\",\n    boxShadow: \"0px 4px 16px -3px rgba(0, 0, 0, 0.07)\",\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\n    letterSpacing: \"0.04em\",\n    color: \"#C4C4C4\",\n    fontStyle: \"normal\",\n    fontWeight: \"normal\",\n    fontFamily: [\n      \"Roboto\",\n      \"-apple-system\",\n      \"BlinkMacSystemFont\",\n      '\"Segoe UI\"',\n      '\"Helvetica Neue\"',\n      \"Arial\",\n      \"sans-serif\",\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"'\n    ].join(\",\"),\n    \"&:focus\": {\n      boxShadow: `0px 0 0 2px rgb(0 0 0 / 15%)`,\n      borderColor: \"#000000\"\n    }\n  }\n}))(InputBase)\n","import { Grid } from \"@material-ui/core\"\nimport React from \"react\"\nimport useStyles from \"./styles\"\nimport SearchBar from \"./SearchBar\"\n\nfunction SearchBars() {\n  const classes = useStyles()\n  return (\n    <Grid\n      container\n      className={classes.root}\n      spacing={2}\n      justifyContent=\"center\"\n    >\n      <Grid item>\n        <SearchBar placeholder=\"Search...\" className={classes.searchByName} />\n      </Grid>\n      <Grid item>\n        <SearchBar placeholder=\"Number\" className={classes.searchByNumber} />\n        <SearchBar placeholder=\"Type\" className={classes.searchByType} />\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default SearchBars\n","import { makeStyles } from \"@material-ui/core\"\n\nexport default makeStyles({\n  root: {\n    display: \"flex\",\n    width: 241,\n    height: 115,\n    padding: \"26px 37px 25px 27px\",\n    margin: \"auto\",\n    alignItems: \"center\",\n    position: \"relative\",\n    borderRadius: 18\n  },\n  image: {\n    height: 117,\n    width: 126,\n    objectFit: \"contain\"\n  },\n  CardContent: {\n    marginLeft: 32,\n    padding: 0\n  },\n  title: {\n    \"& > *\": {\n      fontFamily: \"Roboto\",\n      fontStyle: \"normal\",\n      fontWeight: 900,\n      fontSize: 12,\n      letterSpacing: \"0.04em\"\n    }\n  },\n  pokemonNumber: {\n    color: \"#9E9E9E\",\n    margin: \"0 6.25px 0 0\"\n  },\n  pokemonName: {\n    color: \"#000000\"\n  },\n  type: {\n    \"& > *\": {\n      overflow: \"hidden\",\n      width: 52,\n      fontFamily: \"Roboto\",\n      fontStyle: \"normal\",\n      fontWeight: 900,\n      fontSize: 8,\n      letterSpacing: \"0.04em\",\n      color: \"white\",\n      textAlign: \"center\",\n      backgroundColor: \"red\",\n      borderRadius: 18,\n      border: \"1px\"\n    }\n  },\n  pokemonTypeOne: {\n    margin: \"6px 0 3px 0\"\n  },\n  likeContainer: {\n    position: \"absolute\",\n    right: \"10px\",\n    bottom: \"10px\",\n    border: \" 1px solid #E4E4E4\",\n    borderRadius: 50,\n    padding: 0,\n    width: 29,\n    height: 29,\n    \"& > *\": {\n      padding: 0,\n      width: \"100%\",\n      height: \"100%\"\n    },\n    \"& .MuiFormControlLabel-root\": {\n      margin: 0\n    }\n  }\n})\n","import {\n  Box,\n  Card,\n  CardActions,\n  CardContent,\n  CardMedia,\n  Checkbox,\n  FormControlLabel,\n  IconButton,\n  Typography\n} from \"@material-ui/core\"\nimport { ThumbUp, ThumbUpOutlined } from \"@material-ui/icons\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\nimport useStyles from \"./styles\"\n\nfunction PokemonCard({ id, name, firstType, secondType, image }) {\n  const COLORTYPE = {\n    normal: \"#CACACA\",\n    electric: \"#FFE175\",\n    grass: \"#B4FE7B\",\n    poison: \"#BF8CD1\",\n    bug: \"#D1E16F\",\n    ghost: \"#805594\",\n    fire: \"#FF8A8A\",\n    water: \"#88D1FB\",\n    ground: \"#CA9F5E\",\n    rock: \"#898373\",\n    ice: \"#C6EAFF\",\n    fighting: \"#C6EAFF\",\n    steel: \"#E4E4E4\",\n    psychic: \"#FFB7FC\",\n    flying: \"#5F9FFF\",\n    dragon: \"#C699FF\"\n  }\n  const classes = useStyles()\n  const firstTypeColor = firstType\n    ? COLORTYPE[firstType.toLowerCase()]\n    : COLORTYPE.normal\n  const secondTypeColor = secondType\n    ? COLORTYPE[secondType.toLowerCase()]\n    : COLORTYPE.normal\n  const onerror = (e) => {\n    e.target.onerror = null\n    e.target.src = \"img/assets/404-group.png\"\n  }\n  return (\n    <Card variant=\"outlined\" className={classes.root}>\n      <CardMedia\n        className={classes.image}\n        image={image}\n        title=\"pokemon\"\n        component=\"img\"\n        onError={onerror}\n      />\n      <CardContent className={classes.CardContent}>\n        <Box display=\"flex\" className={classes.title}>\n          <Typography variant=\"body2\" className={classes.pokemonNumber}>\n            {id}\n          </Typography>\n          <Typography variant=\"body2\" className={classes.pokemonName}>\n            {name}\n          </Typography>\n        </Box>\n        <Box className={classes.type}>\n          <Box\n            style={{ backgroundColor: firstTypeColor }}\n            className={classes.pokemonTypeOne}\n          >\n            {firstType && firstType.toUpperCase()}\n          </Box>\n          <Box\n            className={classes.pokemonTypeTwo}\n            style={{ backgroundColor: secondTypeColor }}\n          >\n            {secondType && secondType.toUpperCase()}\n          </Box>\n        </Box>\n      </CardContent>\n\n      <CardActions className={classes.likeContainer}>\n        <IconButton>\n          <FormControlLabel\n            className={classes.likeBtn}\n            control={\n              <Checkbox\n                color=\"primary\"\n                icon={<ThumbUpOutlined fontSize=\"small\" />}\n                checkedIcon={<ThumbUp fontSize=\"small\" />}\n                name={`likeBtn${id}`}\n              />\n            }\n          />\n        </IconButton>\n      </CardActions>\n    </Card>\n  )\n}\n\nPokemonCard.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  firstType: PropTypes.string,\n  secondType: PropTypes.string,\n  image: PropTypes.string.isRequired\n}\nPokemonCard.defaultProps = {\n  firstType: \"\",\n  secondType: \"\"\n}\nexport default PokemonCard\n","import { makeStyles } from \"@material-ui/core\"\n\nexport default makeStyles({\n  root: {\n    width: \"100vw\",\n    maxWidth: 1017,\n    margin: \"auto\"\n  }\n})\n","import { makeStyles } from \"@material-ui/core\"\n\nexport default makeStyles({\n  root: {\n    width: 307,\n    height: 168,\n    position: \"relative\",\n    border: \"1px solid rgba(0, 0, 0, 0.12)\",\n    borderRadius: 18,\n    margin: 0\n  },\n  skeletonImg: {\n    width: 126,\n    height: 117\n  },\n  skeletonContent: {\n    width: 85,\n    height: 47\n  },\n  skeletonTitle: {\n    width: \"100%\",\n    height: 14\n  },\n  skeletonType: {\n    width: 52,\n    height: 12\n  },\n  skeletonLike: {\n    position: \"absolute\",\n    right: \"10px\",\n    bottom: \"10px\",\n    padding: 0,\n    width: 29,\n    height: 29\n  }\n})\n","import { Grid } from \"@material-ui/core\"\nimport Skeleton from \"@material-ui/lab/Skeleton\"\nimport React from \"react\"\nimport useStyles from \"./styles\"\n\nfunction PokemonSkeleton() {\n  const classes = useStyles()\n  return (\n    <Grid\n      item\n      container\n      spacing={4}\n      alignItems=\"center\"\n      className={classes.root}\n    >\n      <Grid item>\n        <Skeleton variant=\"rect\" className={classes.skeletonImg} />\n      </Grid>\n      <Grid item container className={classes.skeletonContent}>\n        <Grid item xs={12}>\n          <Skeleton variant=\"text\" className={classes.skeletonTitle} />\n        </Grid>\n        <Grid item xs={12}>\n          <Skeleton variant=\"text\" className={classes.skeletonType} />\n        </Grid>\n        <Grid item xs={12}>\n          <Skeleton variant=\"text\" className={classes.skeletonType} />\n        </Grid>\n        <Skeleton variant=\"circle\" className={classes.skeletonLike} />\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default PokemonSkeleton\n","import { Grid, useTheme, useMediaQuery } from \"@material-ui/core\"\nimport React, { useState, useEffect } from \"react\"\nimport InfiniteScroll from \"react-infinite-scroller\"\nimport PokemonCard from \"./PokemonCard/PokemonCard\"\nimport useStyles from \"./styles\"\nimport PokemonSkeleton from \"./PokemonSkeleton/PokemonSkeleton\"\n\nfunction MainContent() {\n  const classes = useStyles()\n  const theme = useTheme()\n  const isSmallDisplay = useMediaQuery(theme.breakpoints.down(\"xs\"))\n  const [displayPokemons, setDisplayPokemons] = useState([])\n  const skeletonLength = isSmallDisplay ? 3 : 6\n  const [pokemonsDB, setPokemonsDB] = useState([])\n  function handleFetch() {\n    if (displayPokemons.length + skeletonLength < pokemonsDB.length) {\n      const loadMoreLength = displayPokemons.length + skeletonLength\n      setDisplayPokemons((data) => [\n        ...data,\n        ...[\n          ...pokemonsDB.filter(\n            (dt, idx) => idx >= data.length && idx < loadMoreLength\n          )\n        ].map(({ id, name, type, img }) => (\n          <Grid item key={name + Math.random()}>\n            <PokemonCard\n              id={id}\n              firstType={type ? type[0] : \"\"}\n              secondType={type ? type[1] : \"\"}\n              name={name}\n              image={img}\n            />\n          </Grid>\n        ))\n      ])\n    } else {\n      const max =\n        displayPokemons.length + (pokemonsDB.length - displayPokemons.length)\n      setDisplayPokemons((data) => [\n        ...data,\n        ...pokemonsDB\n          .filter((dt, idx) => idx >= data.length && idx < max)\n          .map(({ id, name, type, img }) => (\n            <Grid item key={name + Math.random()}>\n              <PokemonCard\n                id={id}\n                firstType={type ? type[0] : \"\"}\n                secondType={type ? type[1] : \"\"}\n                name={name}\n                image={img}\n              />\n            </Grid>\n          ))\n      ])\n    }\n  }\n  useEffect(() => {\n    fetch(\"data/pokemons.json\").then((res) =>\n      res.json().then((data) => {\n        setPokemonsDB((a) => [...a, ...data])\n        console.log(\"POKEMONSDB inside the async function & data : \", data)\n        if (pokemonsDB.length) handleFetch()\n      })\n    )\n    console.log(\"POKEMONSDB outsite the async function\", pokemonsDB.length)\n  }, [])\n  return (\n    <InfiniteScroll\n      pageStart={0}\n      hasMore={displayPokemons.length < pokemonsDB.length}\n      loadMore={() => {\n        console.log(\"LOADMORE !\")\n        handleFetch()\n      }}\n      loader={\n        <Grid\n          container\n          spacing={4}\n          className={classes.root}\n          justifyContent=\"center\"\n          key=\"rootGrid1\"\n        >\n          {Array.from({ length: 12 }, () => (\n            <Grid item key={`loading${Math.random()}`}>\n              <PokemonSkeleton />\n            </Grid>\n          ))}\n        </Grid>\n      }\n    >\n      <Grid\n        container\n        spacing={4}\n        className={classes.root}\n        justifyContent=\"center\"\n        key=\"rootGrid2\"\n      >\n        {displayPokemons}\n      </Grid>\n    </InfiniteScroll>\n  )\n}\n\nexport default MainContent\n\n/*\n\n const loadMoreLength = displayPokemons.length + skeletonLength\n      setDisplayPokemons((da) => [\n        ...da,\n        ...[\n          ...PokemonsDB.filter(\n            (data, idx) => idx >= da.length && idx < loadMoreLength\n          )\n        ].map(({ id, name, type, img }) => (\n          <Grid item key={name + Math.random()}>\n            <PokemonCard\n              id={id}\n              firstType={type ? type[0] : \"\"}\n              secondType={type ? type[1] : \"\"}\n              name={name}\n              image={img}\n            />\n          </Grid>\n        ))\n      ])\n\n*/\n","import React from \"react\"\nimport { MainContent, Navbar, SearchBars } from \"./components\"\n\nfunction App() {\n  return (\n    <>\n      <Navbar />\n      <SearchBars />\n      <MainContent />\n    </>\n  )\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}